{"code":"import { ManiterConfig } from '../types/index';\nimport { createHistoryEvent } from '../utils/pv';\nexport default class Maniter {\n    constructor(options) {\n        this.data = Object.assign(this.initDef(), options);\n    }\n    initDef() {\n        window.history['pushState'] = createHistoryEvent('pushState');\n        window.history['replaceState'] = createHistoryEvent('replaceState');\n        this.installManiter();\n        return {\n            sdkVersion: ManiterConfig.version,\n            historyManiter: false,\n            hashManiter: false,\n            domManiter: false,\n            jsError: false,\n        };\n    }\n    captureEvents(mouseEventList, targetKey, data) {\n        mouseEventList.forEach(eventName => {\n            window.addEventListener(eventName, (event) => {\n                console.log(\"监听到了\");\n            });\n        });\n    }\n    installManiter() {\n        if (this.data.historyManiter) {\n            this.captureEvents(['popstate', 'pushState', 'replaceState'], 'history');\n        }\n    }\n}\n","references":["C:/Users/10037/Desktop/maniter/src/types/index.ts","C:/Users/10037/Desktop/maniter/src/utils/pv.ts"]}
